% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/stats-lm.R
\name{safe_predict.lm}
\alias{safe_predict.lm}
\title{Safe predictions from a linear model}
\usage{
\method{safe_predict}{lm}(object, new_data, type = c("response",
  "conf_int", "pred_int"), ..., std_error = FALSE, level = 0.95)
}
\arguments{
\item{object}{An \code{lm} object returned from a call to \code{\link[stats:lm]{stats::lm()}}.}

\item{new_data}{TODO}

\item{type}{What kind of predictions to return. Options are:
\itemize{
\item \code{"response"} (default): Standard predictions from linear regression.
\item \code{"conf_int"}: Fitted values plus a confidence interval for the fit.
\item \code{"pred_int"}: Predictions with accompanying prediction interval.
}}

\item{...}{Unused. \code{safe_predict()} checks that all arguments in \code{...} are
evaluated via the \code{ellipsis} package. The idea is to prevent silent errors
when arguments are mispelled. This feature is experimental and feedback
is welcome.}

\item{std_error}{Logical indicating whether or not calculate standard
errors for the fit at each point. Not available for all models, and can
be computationally expensive to compute. The standard error is \emph{always}
the standard error for the mean, and \emph{never} the standard error for
predictions. Standard errors are returned in a column called \code{.std_error}.
Defaults to \code{FALSE}.}

\item{level}{A number strictly between \code{0} and \code{1} to use as the
confidence level when calculating confidence and prediction intervals.
Setting \code{level = 0.90} correspondings to a 90 percent confidence interval.
Ignored except when \code{type = "conf_int"} or \code{type = "pred_int"}. Defaults
to \code{0.95}.}
}
\description{
Safe predictions from a linear model
}
\details{
Do not use on model objects that only subclass \code{lm}. This will result
in an error.
}
\examples{

fit <- lm(hp ~ ., mtcars)

safe_predict(fit, mtcars)

mt2 <- mtcars
diag(mt2) <- NA

safe_predict(fit, mt2, std_error = TRUE)
safe_predict(fit, mt2, type = "pred_int", level = 0.9)

}
